{"version":3,"file":"static/js/59.c45507e1.chunk.js","mappings":"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","sources":["webpack://market/./src/components/Form/Form.module.scss?dea5","webpack://market/./src/components/ButtonPhone/ButtonPhone.module.scss?8617","components/ButtonPhone/index.js","components/Form/FormThankYou/index.js","components/Form/FormFirst/checked.svg","components/Form/FormFirst/caret-form.svg","components/UploadSvg.js","components/Form/FormFirst/index.js","components/Form/index.js","components/Form/FormContainer.js","components/Title.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__A4ONk\",\"purpose\":\"Form_purpose__wnyAv\",\"formContent\":\"Form_formContent__uoFWb\",\"formItem\":\"Form_formItem__EbQdj\",\"formTitle\":\"Form_formTitle__ucnhV\",\"formRow\":\"Form_formRow__sdiWb\",\"formColumn\":\"Form_formColumn__nIr8W\",\"formError\":\"Form_formError__OBjXH\",\"inputDrop\":\"Form_inputDrop__0HCbV\",\"uploadList\":\"Form_uploadList__D850e\",\"requiredNotice\":\"Form_requiredNotice__Iktrz\",\"submitBtn\":\"Form_submitBtn__5kZ5A\",\"checked\":\"Form_checked__xuvfj\",\"content\":\"Form_content__VGlx8\",\"text\":\"Form_text__UJr-U\",\"question\":\"Form_question__dATqc\"};","// extracted by mini-css-extract-plugin\nexport default {\"phone\":\"ButtonPhone_phone__pDG2+\"};","import styles from './ButtonPhone.module.scss';\r\n\r\nfunction ButtonPhone(props) {\r\n    return (\r\n        <a className={styles.phone} href={props.callPhone}>{props.phone}</a>\r\n    )\r\n}\r\n\r\nexport default ButtonPhone;","import ButtonPhone from '../../ButtonPhone';\r\nimport styles from '../Form.module.scss';\r\n\r\nfunction FormThankYou(props) {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='title-big'>Ждем тебя!</h2>\r\n            <div className='d-flex justify-between flex-wrap'>\r\n                <div className={styles.content}>\r\n                    <p>В 2020 году самыми востребованными умениями и качествами на рынке труда станут:</p>\r\n                    <p className={styles.text}>Умение ставить цели, планировать свое время, инициативность, настойчивость, высокая мотивация, умение эффективно общаться, любознательность. </p>\r\n                    <p>А профессиональным навыкам можно научить любого человека.</p>\r\n                </div>\r\n                <div className={styles.question}>\r\n                    <h3 className='title'>Остались вопросы?</h3>\r\n                    <ButtonPhone phone={props.phone} callPhone={props.callPhone} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FormThankYou;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 12.5L9.76768 15.9963C10.1713 16.5062 10.9467 16.5012 11.3437 15.9862L17.5 8\",\n    stroke: \"#10C300\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChecked);\nexport default __webpack_public_path__ + \"static/media/checked.4889d871143d1aacc59190eec511697d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCaretForm(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.866 17.5C12.4811 18.1667 11.5189 18.1667 11.134 17.5L6.80383 10C6.41893 9.33333 6.90006 8.5 7.66986 8.5L16.3301 8.5C17.0999 8.5 17.581 9.33333 17.1961 10L12.866 17.5Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCaretForm);\nexport default __webpack_public_path__ + \"static/media/caret-form.7360615fa8917722eb466e0966922ad9.svg\";\nexport { ForwardRef as ReactComponent };","function UploadSvg() {\r\n    return (\r\n        <svg className=\"upload-file\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n            <g opacity=\"0.3\">\r\n                <path d=\"M17 5V17C17 19.757 14.757 22 12 22C9.243 22 7 19.757 7 17V5C7 3.346 8.346 2 10 2C11.654 2 13 3.346 13 5V14C13 14.551 12.551 15 12 15C11.449 15 11 14.551 11 14V6H9V14C9 15.657 10.343 17 12 17C13.657 17 15 15.657 15 14V5C15 2.239 12.761 0 10 0C7.239 0 5 2.239 5 5V17C5 20.866 8.134 24 12 24C15.866 24 19 20.866 19 17V5H17Z\" fill=\"black\"/>\r\n            </g>\r\n        </svg>\r\n    );\r\n}\r\n\r\nexport default UploadSvg;","import React from \"react\";\r\nimport ButtonPhone from '../../ButtonPhone';\r\nimport styles from '../Form.module.scss';\r\nimport { Field, Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select, { components } from \"react-select\";\r\nimport InputMask from \"react-input-mask\";\r\nimport { useDropzone } from 'react-dropzone';\r\nimport checkedImage from './checked.svg';\r\nimport caretImage from './caret-form.svg';\r\nimport Title from '../../Title';\r\n\r\nimport UploadSvg from '../../UploadSvg';\r\n\r\nconst DropdownIndicator = props => {\r\n    return (\r\n        <components.DropdownIndicator {...props}>\r\n            <img src={caretImage} alt=\"caret-form\" />\r\n        </components.DropdownIndicator>\r\n    );\r\n};\r\n\r\nfunction FormFirst(props) {\r\n\r\n    const options = [\r\n        { value: 'merchandiser', label: 'товаровед' },\r\n        { value: 'driver', label: 'водитель' },\r\n        { value: 'baker', label: 'пекарь' },\r\n        { value: 'cashier', label: 'кассир' },\r\n        { value: 'salesman', label: 'продавец' },\r\n        { value: 'cook', label: 'повар' },\r\n        { value: 'receiver', label: 'приёмщик' }\r\n    ]\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        job: Yup.string().required(\"выберите вакансию\"),\r\n        fullName: Yup.string().required('заполните поле'),\r\n        dateOfBirth: Yup.date().max(new Date(), \"этого не может быть\").required(\"выберите дату\"),\r\n        phone: Yup.string()\r\n            .test(\"len\", \"заполните поле\", (val = \"\") => {\r\n                const val_length_without_dashes = val.replace(/-|_/g, \"\").length;\r\n                return val_length_without_dashes === 21;\r\n            })\r\n            .required(\"заполните поле\"),\r\n        email: Yup.string().email('поле заполнено не корректно'),\r\n        gender: Yup.string(),\r\n        resume: Yup.string(),\r\n        captcha: Yup.string(),\r\n        accepted: Yup.boolean().oneOf([true], 'это поле обязательное для заполнения')\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='title-big'>Работа твоей мечты</h2>\r\n            <div className='d-flex justify-between flex-wrap'>\r\n                <Formik\r\n                    initialValues={{\r\n                        job: '',\r\n                        fullName: '',\r\n                        dateOfBirth: '',\r\n                        phone: '',\r\n                        gender: '',\r\n                        email: '',\r\n                        resume: '',\r\n                        resumeFile: [],\r\n                        captcha: '',\r\n                        accepted: true\r\n                    }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => {\r\n                        console.log(JSON.stringify(values, null, 2));\r\n                        props.onClick(false);\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                >\r\n                    {({ values, errors, touched, handleChange, handleBlur, handleSubmit, setFieldValue }) => (\r\n\r\n                        <div className={styles.formContent}>\r\n                            <Form>\r\n                                <div className={styles.formItem}>\r\n                                    <p className={styles.formTitle}>\r\n                                        Вакансия *\r\n                                        {!errors.job && values.job.length > 1\r\n                                            && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Select\r\n                                        className={touched.job && errors.job && 'error'}\r\n                                        id=\"job\"\r\n                                        options={options}\r\n                                        placeholder=\"выберите работу мечты\"\r\n                                        classNamePrefix={'custom-select'}\r\n                                        isSearchable={false}\r\n                                        components={{ DropdownIndicator }}\r\n                                        onChange={selectedOption => {\r\n                                            handleChange(\"job\")(selectedOption.value);\r\n                                        }}\r\n                                    />\r\n                                    {touched.job && errors.job\r\n                                        && <p className={styles.formError}>{errors.job}</p>\r\n                                    }\r\n                                </div>\r\n                                <div className={styles.formItem}>\r\n                                    <p className={styles.formTitle}>\r\n                                        ФИО *\r\n                                        {touched.fullName && !errors.fullName\r\n                                            && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Field\r\n                                        className={touched.fullName && errors.fullName && 'error'}\r\n                                        type=\"text\"\r\n                                        name=\"fullName\"\r\n                                        value={values.fullName}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                    {touched.fullName && errors.fullName\r\n                                        && <p className={styles.formError}>{errors.fullName}</p>\r\n                                    }\r\n                                </div>\r\n                                <div className={styles.formRow}>\r\n                                    <div className={styles.formColumn}>\r\n\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Дата рождения *\r\n                                                {!errors.dateOfBirth && values.dateOfBirth.length >= 10\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <Field\r\n                                                className={touched.dateOfBirth && errors.dateOfBirth && 'error'}\r\n                                                type=\"date\"\r\n                                                name=\"dateOfBirth\"\r\n                                                value={values.dateOfBirth}\r\n                                                placeholder=\"28.06.2002\"\r\n                                                pattern=\"\\d{4}-\\d{2}-\\d{2}\"\r\n                                            />\r\n                                            {touched.dateOfBirth && errors.dateOfBirth\r\n                                                && <p className={styles.formError}>{errors.dateOfBirth}</p>\r\n                                            }\r\n                                        </div>\r\n\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Контактый телефон *\r\n                                                {touched.phone && !errors.phone\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <InputMask\r\n                                                className={touched.phone && errors.phone && 'error'}\r\n                                                name=\"phone\"\r\n                                                type=\"tel\"\r\n                                                mask=\"+38 (999) 999 - 99 - 99\"\r\n                                                placeholder=\"+38 (\"\r\n                                                onChange={handleChange}\r\n                                                onBlur={handleBlur}\r\n                                                value={values.phone}\r\n                                            />\r\n                                            {touched.phone && errors.phone\r\n                                                && <p className={styles.formError}>{errors.phone}</p>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={styles.formColumn}>\r\n                                        <div className={`${styles.formItem} form-radio`}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Пол\r\n                                                {!errors.gender && values.gender.length > 1\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <label>\r\n                                                <Field type=\"radio\" name=\"gender\" value=\"male\" />\r\n                                                <span>мужской</span>\r\n                                            </label>\r\n                                            <label>\r\n                                                <Field type=\"radio\" name=\"gender\" value=\"female\" />\r\n                                                <span>женский</span>\r\n                                            </label>\r\n                                            {touched.gender && errors.gender\r\n                                                && <p className={styles.formError}>{errors.gender}</p>\r\n                                            }\r\n                                        </div>\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Электронная почта\r\n                                                {touched.email && !errors.email && values.email.length > 1\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <Field\r\n                                                className={touched.email && errors.email && 'error'}\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                value={values.email}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            { touched.email && errors.email\r\n                                                && <p className={styles.formError}>{errors.email}</p>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles.formItem}>\r\n                                    <p className={styles.formTitle}>\r\n                                        Резюме\r\n                                        {!errors.resume && values.resume.length >= 1\r\n                                            && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Field\r\n                                        className={touched.resume && errors.resume && 'error'}\r\n                                        as=\"textarea\"\r\n                                        name=\"resume\"\r\n                                        value={values.resume}\r\n                                    />\r\n                                    <UploadComponent setFieldValue={setFieldValue} />\r\n                                    <ul className={styles.uploadList}>\r\n                                        {values.resumeFile &&\r\n                                            values.resumeFile.map((file, i) => (\r\n                                                <li key={file.path}>\r\n                                                    {file.path} - {file.size / 1000} МБ\r\n                                                </li>\r\n                                            ))\r\n                                        }\r\n                                    </ul>\r\n                                </div>\r\n\r\n                                <div className={styles.formRow} style={{marginBottom: \"-6px\"}}>\r\n                                    <div className={styles.formColumn}>\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Капча\r\n                                                { !errors.captcha \r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={styles.formColumn}>\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.requiredNotice}>\r\n                                                * поля для обязательного заполнения\r\n                                            </p>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div className={`${styles.formItem} form-checkbox`}>\r\n                                    <label>\r\n                                        <Field type=\"checkbox\" name=\"accepted\" />\r\n                                        <span>я подтверждаю согласие на обработку персональных данных и принимаю условия рассмотрения обращений *</span>\r\n                                    </label>\r\n                                    {errors.accepted\r\n                                        && <p className={styles.formError}>{errors.accepted}</p>\r\n                                    }\r\n                                </div>\r\n                                <button\r\n                                    className={styles.submitBtn}\r\n                                    onClick={handleSubmit}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    отправить\r\n                                </button>\r\n                            </Form>\r\n                        </div>\r\n                    )}\r\n                </Formik>\r\n\r\n                <div className={styles.purpose}>\r\n                    <Title\r\n                        title=\"Наша суперцель\"\r\n                    />\r\n                    <p>— стать любимым магазином для каждой российской семьи.</p>\r\n                    <p>Сотни тысяч наших сотрудников ежедневно работают над её достижением.</p>\r\n                    <p>Мы уверены, что в ближайшие годы достигнем этого и будет здорово,если вместе с тобой.</p>\r\n                    <ButtonPhone phone={props.phone} callPhone={props.callPhone} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nconst UploadComponent = props => {\r\n    const { setFieldValue } = props;\r\n    const { getRootProps, getInputProps } = useDropzone({\r\n        onDrop: acceptedFiles => {\r\n            setFieldValue(\"resumeFile\", acceptedFiles);\r\n        }\r\n    });\r\n    return (\r\n        <div>\r\n            { }\r\n            <div className={`${styles.inputDrop} input`}>\r\n                <UploadSvg />\r\n                <div {...getRootProps({ className: \"dropzone\" })}>\r\n                    <input\r\n                        {...getInputProps()}\r\n                        type=\"text\"\r\n                        name=\"resumeFile\"\r\n                    />\r\n                    <p>выберете или перетащите файл</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FormFirst;","import React from 'react';\r\nimport styles from './Form.module.scss';\r\nimport FormThankYou from './FormThankYou'\r\nimport FormFirst from './FormFirst'\r\n\r\nfunction Form(props) {\r\n    const [showForm, setShowForm] = React.useState(true);\r\n\r\n    return (\r\n        <section className={styles.form}>\r\n            <div className='container'>\r\n                { showForm ? \r\n                <FormFirst phone={props.phone} callPhone={props.callPhone} onClick={() => setShowForm() } /> :\r\n                <FormThankYou phone={props.phone} callPhone={props.callPhone} /> }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form;","import { connect } from \"react-redux\";\r\nimport Form from \"./index\";\r\nimport { getPhone, getCallPhone } from \"../../redux/info-selectors\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        phone: getPhone(state),\r\n        callPhone: getCallPhone(state)\r\n    }\r\n}\r\n\r\nconst FormContainer = connect(mapStateToProps, {}) (Form);\r\n\r\nexport default FormContainer;","function Title(props) {\r\n    return (\r\n        <h2 className=\"title mb-30\">{props.title}</h2>\r\n    );\r\n}\r\n\r\nexport default Title;"],"names":["props","className","styles","href","callPhone","phone","width","height","viewBox","fill","xmlns","opacity","d","DropdownIndicator","c","src","caretImage","alt","UploadComponent","setFieldValue","useDropzone","onDrop","acceptedFiles","getRootProps","getInputProps","type","name","options","value","label","validationSchema","Yup","shape","job","required","fullName","dateOfBirth","max","Date","test","val","val_length_without_dashes","replace","length","email","gender","resume","captcha","accepted","oneOf","initialValues","resumeFile","validateOnBlur","onSubmit","values","console","log","JSON","stringify","onClick","errors","touched","handleChange","handleBlur","handleSubmit","checkedImage","id","placeholder","classNamePrefix","isSearchable","components","onChange","selectedOption","autoComplete","pattern","mask","onBlur","as","map","file","i","path","size","style","marginBottom","Title","title","React","showForm","setShowForm","connect","state","getPhone","getCallPhone","Form"],"sourceRoot":""}