{"version":3,"file":"static/js/978.1df1dd36.chunk.js","mappings":"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","sources":["webpack://market/./src/components/Form/Form.module.scss?dea5","webpack://market/./src/components/ButtonPhone/ButtonPhone.module.scss?8617","components/ButtonPhone/index.js","components/Form/FormThankYou/index.js","components/Form/FormFirst/checked.svg","components/Form/FormFirst/caret-form.svg","components/Form/FormFirst/index.js","components/Form/index.js","components/Form/FormContainer.js","components/Title.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__A4ONk\",\"purpose\":\"Form_purpose__wnyAv\",\"formContent\":\"Form_formContent__uoFWb\",\"formItem\":\"Form_formItem__EbQdj\",\"formTitle\":\"Form_formTitle__ucnhV\",\"formRow\":\"Form_formRow__sdiWb\",\"formColumn\":\"Form_formColumn__nIr8W\",\"formError\":\"Form_formError__OBjXH\",\"submitBtn\":\"Form_submitBtn__5kZ5A\",\"checked\":\"Form_checked__xuvfj\",\"content\":\"Form_content__VGlx8\",\"text\":\"Form_text__UJr-U\",\"question\":\"Form_question__dATqc\"};","// extracted by mini-css-extract-plugin\nexport default {\"phone\":\"ButtonPhone_phone__pDG2+\"};","import styles from './ButtonPhone.module.scss';\r\n\r\nfunction ButtonPhone(props) {\r\n    return (\r\n        <a className={styles.phone} href={props.callPhone}>{props.phone}</a>\r\n    )\r\n}\r\n\r\nexport default ButtonPhone;","import ButtonPhone from '../../ButtonPhone';\r\nimport styles from '../Form.module.scss';\r\n\r\nfunction FormThankYou(props) {\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='title-big'>Ждем тебя!</h2>\r\n            <div className='d-flex justify-between flex-wrap'>\r\n                <div className={styles.content}>\r\n                    <p>В 2020 году самыми востребованными умениями и качествами на рынке труда станут:</p>\r\n                    <p className={styles.text}>Умение ставить цели, планировать свое время, инициативность, настойчивость, высокая мотивация, умение эффективно общаться, любознательность. </p>\r\n                    <p>А профессиональным навыкам можно научить любого человека.</p>\r\n                </div>\r\n                <div className={styles.question}>\r\n                    <h3 className='title'>Остались вопросы?</h3>\r\n                    <ButtonPhone phone={props.phone} callPhone={props.callPhone} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FormThankYou;","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgChecked(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7 12.5L9.76768 15.9963C10.1713 16.5062 10.9467 16.5012 11.3437 15.9862L17.5 8\",\n    stroke: \"#10C300\",\n    strokeWidth: 2,\n    strokeLinecap: \"round\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgChecked);\nexport default __webpack_public_path__ + \"static/media/checked.4889d871143d1aacc59190eec511697d.svg\";\nexport { ForwardRef as ReactComponent };","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgCaretForm(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12.866 17.5C12.4811 18.1667 11.5189 18.1667 11.134 17.5L6.80383 10C6.41893 9.33333 6.90006 8.5 7.66986 8.5L16.3301 8.5C17.0999 8.5 17.581 9.33333 17.1961 10L12.866 17.5Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgCaretForm);\nexport default __webpack_public_path__ + \"static/media/caret-form.7360615fa8917722eb466e0966922ad9.svg\";\nexport { ForwardRef as ReactComponent };","import ButtonPhone from '../../ButtonPhone';\r\nimport styles from '../Form.module.scss';\r\nimport { Field, Formik, Form } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport Select, { components } from \"react-select\";\r\nimport checkedImage from './checked.svg';\r\nimport caretImage from './caret-form.svg';\r\nimport Title from '../../Title';\r\n\r\nconst DropdownIndicator = props => {\r\n    return (\r\n      <components.DropdownIndicator {...props}>\r\n            <img src={caretImage} alt=\"caret-form\" />\r\n      </components.DropdownIndicator>\r\n    );\r\n  };\r\n\r\nfunction FormFirst(props) {\r\n\r\n    const options = [\r\n        { value: 'merchandiser', label: 'товаровед' },\r\n        { value: 'driver', label: 'водитель' },\r\n        { value: 'baker', label: 'пекарь' },\r\n        { value: 'cashier', label: 'кассир' },\r\n        { value: 'salesman', label: 'продавец' },\r\n        { value: 'cook', label: 'повар' },\r\n        { value: 'receiver', label: 'приёмщик' }\r\n    ]\r\n\r\n    const validationSchema = Yup.object().shape({\r\n        job: Yup.array()\r\n        .min(1, \"выбирете вакансию\")\r\n        .of(\r\n          Yup.object().shape({\r\n            label: Yup.string().required(),\r\n            value: Yup.string().required()\r\n          })\r\n        ),\r\n        fullName: Yup.string().required('заполнете поле'),\r\n        phone: Yup.number().required('заполнете поле'),\r\n        email: Yup.string().email('поле заполнено не корректно'),\r\n        gender: Yup.string().required(\"выберите пол\"),\r\n        resume: Yup.string(),\r\n        accepted: Yup.boolean().oneOf([true], 'это поле обязательное для заполнения')\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='title-big'>Работа твоей мечты</h2>\r\n            <div className='d-flex justify-between flex-wrap'>\r\n                <Formik\r\n                    initialValues={{\r\n                        job: '',\r\n                        fullName: '',\r\n                        dateOfBirth: '',\r\n                        phone: '',\r\n                        gender: '',\r\n                        email: '',\r\n                        resume: '',\r\n                        resumeFile: '',\r\n                        captcha: '',\r\n                        accepted: true\r\n                    }}\r\n                    validateOnBlur\r\n                    onSubmit={(values) => {\r\n                        console.log(JSON.stringify(values, null, 2));\r\n                        props.onClick(false);\r\n                    }}\r\n                    validationSchema={validationSchema}\r\n                >\r\n                    {({ values, errors, touched, isValid, handleChange, handleBlur, handleSubmit, dirty }) => (\r\n\r\n                        <div className={styles.formContent}>\r\n                            <Form>\r\n                                <div className={styles.formItem}>\r\n                                    {/* <p className={styles.formTitle}>\r\n                                        Вакансия *\r\n                                        { !errors.job\r\n                                                && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Select\r\n                                        id=\"job\"\r\n                                        options={options}\r\n                                        placeholder=\"выберите работу мечты\"\r\n                                        classNamePrefix={'custom-select'}\r\n                                        isSearchable={false}\r\n                                        components={{ DropdownIndicator }}\r\n                                        onChange={handleChange}\r\n                                        value={values.job}\r\n                                        onBlur={handleBlur}\r\n                                    />\r\n                                    {touched.job && errors.job\r\n                                        && <p className={styles.formError}>{errors.job}</p>\r\n                                    } */}\r\n                                </div>\r\n                                <div className={styles.formItem}>\r\n                                    <p className={styles.formTitle}>\r\n                                        ФИО *\r\n                                        {touched.fullName && !errors.fullName\r\n                                            && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Field\r\n                                        className={touched.fullName && errors.fullName && 'error'}\r\n                                        type=\"text\"\r\n                                        name=\"fullName\"\r\n                                        value={values.fullName}\r\n                                        autoComplete=\"off\"\r\n                                    />\r\n                                    {touched.fullName && errors.fullName\r\n                                        && <p className={styles.formError}>{errors.fullName}</p>\r\n                                    }\r\n                                </div>\r\n                                <div className={styles.formRow}>\r\n                                    <div className={styles.formColumn}>\r\n\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Контактый телефон *\r\n                                                {!errors.phone && values.phone.length >= 10\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <Field\r\n                                                className={touched.phone && errors.phone && 'error'}\r\n                                                name=\"phone\"\r\n                                                type=\"tel\"\r\n                                                value={values.phone}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            {touched.phone && errors.phone\r\n                                                && <p className={styles.formError}>{errors.phone}</p>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className={styles.formColumn}>\r\n                                        <div className={`${styles.formItem} form-radio`}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Пол *\r\n                                                {!errors.gender && values.gender.length > 1\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <label>\r\n                                                <Field type=\"radio\" name=\"gender\" value=\"male\" />\r\n                                                <span>мужской</span>\r\n                                            </label>\r\n                                            <label>\r\n                                                <Field type=\"radio\" name=\"gender\" value=\"female\" />\r\n                                                <span>женский</span>\r\n                                            </label>\r\n                                            {touched.gender && errors.gender\r\n                                                && <p className={styles.formError}>{errors.gender}</p>\r\n                                            }\r\n                                        </div>\r\n                                        <div className={styles.formItem}>\r\n                                            <p className={styles.formTitle}>\r\n                                                Электронная почта\r\n                                                {touched.email && !errors.email && values.email.length > 1\r\n                                                    && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                            </p>\r\n                                            <Field\r\n                                                className={touched.email && errors.email && 'error'}\r\n                                                type=\"email\"\r\n                                                name=\"email\"\r\n                                                value={values.email}\r\n                                                autoComplete=\"off\"\r\n                                            />\r\n                                            {touched.email && errors.email\r\n                                                && <p className={styles.formError}>{errors.email}</p>\r\n                                            }\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className={styles.formItem}>\r\n                                    <p className={styles.formTitle}>\r\n                                        Резюме\r\n                                        {!errors.resume && values.resume.length >= 1\r\n                                            && <img src={checkedImage} className={styles.checked} alt=\"checked\" />}\r\n                                    </p>\r\n                                    <Field\r\n                                        className={touched.resume && errors.resume && 'error'}\r\n                                        as=\"textarea\"\r\n                                        name=\"resume\"\r\n                                        value={values.resume}\r\n                                    />\r\n                                    {touched.resume && errors.resume\r\n                                        && <p className={styles.formError}>{errors.resume}</p>\r\n                                    }\r\n                                </div>\r\n\r\n\r\n\r\n\r\n\r\n                                <div className={`${styles.formItem} form-checkbox`}>\r\n                                    <label>\r\n                                        <Field type=\"checkbox\" name=\"accepted\" />\r\n                                        <span>я подтверждаю согласие на обработку персональных данных и принимаю условия рассмотрения обращений *</span>\r\n                                    </label>\r\n                                    {errors.accepted\r\n                                        && <p className={styles.formError}>{errors.accepted}</p>\r\n                                    }\r\n                                </div>\r\n                                <button\r\n                                    disabled={!isValid}\r\n                                    className={styles.submitBtn}\r\n                                    onClick={handleSubmit}\r\n                                    type=\"submit\"\r\n                                >\r\n                                    отправить\r\n                                </button>\r\n                            </Form>\r\n                        </div>\r\n                    )}\r\n                </Formik>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                <div className={styles.purpose}>\r\n                    <Title\r\n                        title=\"Наша суперцель\"\r\n                    />\r\n                    <p>— стать любимым магазином для каждой российской семьи.</p>\r\n                    <p>Сотни тысяч наших сотрудников ежедневно работают над её достижением.</p>\r\n                    <p>Мы уверены, что в ближайшие годы достигнем этого и будет здорово,если вместе с тобой.</p>\r\n                    <ButtonPhone phone={props.phone} callPhone={props.callPhone} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FormFirst;","import React from 'react';\r\nimport styles from './Form.module.scss';\r\nimport FormThankYou from './FormThankYou'\r\nimport FormFirst from './FormFirst'\r\n\r\nfunction Form(props) {\r\n    const [showForm, setShowForm] = React.useState(true);\r\n\r\n    return (\r\n        <section className={styles.form}>\r\n            <div className='container'>\r\n                { showForm ? \r\n                <FormFirst phone={props.phone} callPhone={props.callPhone} onClick={() => setShowForm() } /> :\r\n                <FormThankYou phone={props.phone} callPhone={props.callPhone} /> }\r\n            </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Form;","import { connect } from \"react-redux\";\r\nimport Form from \"./index\";\r\nimport { getPhone, getCallPhone } from \"../../redux/info-selectors\"\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        phone: getPhone(state),\r\n        callPhone: getCallPhone(state)\r\n    }\r\n}\r\n\r\nconst FormContainer = connect(mapStateToProps, {}) (Form);\r\n\r\nexport default FormContainer;","function Title(props) {\r\n    return (\r\n        <h2 className=\"title mb-30\">{props.title}</h2>\r\n    );\r\n}\r\n\r\nexport default Title;"],"names":["props","className","styles","href","callPhone","phone","validationSchema","Yup","shape","job","min","of","label","required","value","fullName","email","gender","resume","accepted","oneOf","initialValues","dateOfBirth","resumeFile","captcha","validateOnBlur","onSubmit","values","console","log","JSON","stringify","onClick","errors","touched","isValid","handleSubmit","handleChange","handleBlur","dirty","src","checkedImage","alt","type","name","autoComplete","length","as","disabled","Title","title","React","showForm","setShowForm","connect","state","getPhone","getCallPhone","Form"],"sourceRoot":""}